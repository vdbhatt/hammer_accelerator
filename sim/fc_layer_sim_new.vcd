$comment Generated by Amaranth $end
$date 2022-07-04 17:55:50.585974 $end
$timescale 1 ps $end
$scope module bench $end
$scope module top $end
$var wire 32 ! weight_addr $end
$var wire 32 " weight_addr$1 $end
$var wire 32 # input_addr $end
$var wire 32 $ input_addr$1 $end
$var wire 32 % output_addr $end
$var wire 32 & output_addr$1 $end
$var wire 8 ' neuron_count $end
$var wire 8 ( neuron_count$1 $end
$var wire 8 ) synapses $end
$var wire 8 * synapses$1 $end
$scope module fc_layer $end
$var wire 32 ! weight_addr $end
$var wire 32 # input_addr $end
$var wire 8 ) synapses $end
$var wire 1 + clk $end
$var wire 1 , rst $end
$var wire 1 - w_en $end
$var wire 1 . a_en $end
$var wire 1 / en $end
$var wire 32 0 start_addr $end
$var wire 8 1 length $end
$var wire 1 2 weight_done $end
$var wire 1 3 done $end
$var wire 1 4 en$1 $end
$var wire 1 5 ready $end
$var wire 1 6 o_ready $end
$var wire 32 7 i_data $end
$var wire 36 8 data $end
$var wire 1 9 i_valid $end
$var wire 1 : valid $end
$var wire 32 ; start_addr$1 $end
$var wire 8 < length$1 $end
$var wire 1 = act_done $end
$var wire 1 > done$1 $end
$var wire 1 ? en$2 $end
$var wire 1 @ ready$1 $end
$var wire 1 A o_ready$1 $end
$var wire 32 B i_data$1 $end
$var wire 36 C data$1 $end
$var wire 1 D i_valid$1 $end
$var wire 1 E valid$1 $end
$var wire 36 F a $end
$var wire 32 G o_data $end
$var wire 1 H a_valid $end
$var wire 1 I o_valid $end
$var wire 1 J i_ready $end
$var wire 1 K a_ready $end
$var wire 36 L b $end
$var wire 32 M o_data$1 $end
$var wire 1 N b_valid $end
$var wire 1 O o_valid$1 $end
$var wire 1 P i_ready$1 $end
$var wire 1 Q b_ready $end
$var wire 8 R acc_len $end
$var wire 32 S acc $end
$var wire 32 T acc$1 $end
$var wire 1 U synapses_done $end
$scope module act_sb $end
$var wire 1 + clk $end
$var wire 1 , rst $end
$var wire 1 A o_ready $end
$var wire 32 B i_data $end
$var wire 1 D i_valid $end
$var wire 32 M o_data $end
$var wire 1 O o_valid $end
$var wire 1 P i_ready $end
$var wire 1 ~" r_valid $end
$var wire 32 !# r_data $end
$upscope $end
$scope module fetch_act $end
$var wire 1 + clk $end
$var wire 1 , rst $end
$var wire 8 < length $end
$var wire 1 > done $end
$var wire 1 @ ready $end
$var wire 36 C data $end
$var wire 1 E valid $end
$var wire 8 i! counter $end
$var wire 32 j! current_addr $end
$var wire 32 k! adr $end
$var wire 1 l! we $end
$var wire 8 m! offset $end
$var wire 32 n! dat_r $end
$scope module mem $end
$var wire 32 k! adr $end
$var wire 1 l! we $end
$var wire 32 n! dat_r $end
$var wire 7 o! mem_r_addr $end
$var wire 32 p! mem_r_data $end
$var wire 7 q! mem_w_addr $end
$var wire 32 r! mem_w_data $end
$var wire 32 s! dat_w $end
$var wire 1 t! mem_w_en $end
$scope module rdport $end
$var wire 1 + clk $end
$var wire 1 , rst $end
$var wire 7 o! mem_r_addr $end
$var wire 32 p! mem_r_data $end
$var wire 7 u! latch_addr $end
$var wire 32 v! memory(0) $end
$var wire 32 w! memory(1) $end
$var wire 32 x! memory(2) $end
$var wire 32 y! memory(3) $end
$var wire 32 z! memory(4) $end
$var wire 32 {! memory(5) $end
$var wire 32 |! memory(6) $end
$var wire 32 }! memory(7) $end
$var wire 32 ~! memory(8) $end
$var wire 32 !" memory(9) $end
$var wire 32 "" memory(10) $end
$var wire 32 #" memory(11) $end
$var wire 32 $" memory(12) $end
$var wire 32 %" memory(13) $end
$var wire 32 &" memory(14) $end
$var wire 32 '" memory(15) $end
$var wire 32 (" memory(16) $end
$var wire 32 )" memory(17) $end
$var wire 32 *" memory(18) $end
$var wire 32 +" memory(19) $end
$var wire 32 ," memory(20) $end
$var wire 32 -" memory(21) $end
$var wire 32 ." memory(22) $end
$var wire 32 /" memory(23) $end
$var wire 32 0" memory(24) $end
$var wire 32 1" memory(25) $end
$var wire 32 2" memory(26) $end
$var wire 32 3" memory(27) $end
$var wire 32 4" memory(28) $end
$var wire 32 5" memory(29) $end
$var wire 32 6" memory(30) $end
$var wire 32 7" memory(31) $end
$var wire 32 8" memory(32) $end
$var wire 32 9" memory(33) $end
$var wire 32 :" memory(34) $end
$var wire 32 ;" memory(35) $end
$var wire 32 <" memory(36) $end
$var wire 32 =" memory(37) $end
$var wire 32 >" memory(38) $end
$var wire 32 ?" memory(39) $end
$var wire 32 @" memory(40) $end
$var wire 32 A" memory(41) $end
$var wire 32 B" memory(42) $end
$var wire 32 C" memory(43) $end
$var wire 32 D" memory(44) $end
$var wire 32 E" memory(45) $end
$var wire 32 F" memory(46) $end
$var wire 32 G" memory(47) $end
$var wire 32 H" memory(48) $end
$var wire 32 I" memory(49) $end
$var wire 32 J" memory(50) $end
$var wire 32 K" memory(51) $end
$var wire 32 L" memory(52) $end
$var wire 32 M" memory(53) $end
$var wire 32 N" memory(54) $end
$var wire 32 O" memory(55) $end
$var wire 32 P" memory(56) $end
$var wire 32 Q" memory(57) $end
$var wire 32 R" memory(58) $end
$var wire 32 S" memory(59) $end
$var wire 32 T" memory(60) $end
$var wire 32 U" memory(61) $end
$var wire 32 V" memory(62) $end
$var wire 32 W" memory(63) $end
$var wire 32 X" memory(64) $end
$var wire 32 Y" memory(65) $end
$var wire 32 Z" memory(66) $end
$var wire 32 [" memory(67) $end
$var wire 32 \" memory(68) $end
$var wire 32 ]" memory(69) $end
$var wire 32 ^" memory(70) $end
$var wire 32 _" memory(71) $end
$var wire 32 `" memory(72) $end
$var wire 32 a" memory(73) $end
$var wire 32 b" memory(74) $end
$var wire 32 c" memory(75) $end
$var wire 32 d" memory(76) $end
$var wire 32 e" memory(77) $end
$var wire 32 f" memory(78) $end
$var wire 32 g" memory(79) $end
$var wire 32 h" memory(80) $end
$var wire 32 i" memory(81) $end
$var wire 32 j" memory(82) $end
$var wire 32 k" memory(83) $end
$var wire 32 l" memory(84) $end
$var wire 32 m" memory(85) $end
$var wire 32 n" memory(86) $end
$var wire 32 o" memory(87) $end
$var wire 32 p" memory(88) $end
$var wire 32 q" memory(89) $end
$var wire 32 r" memory(90) $end
$var wire 32 s" memory(91) $end
$var wire 32 t" memory(92) $end
$var wire 32 u" memory(93) $end
$var wire 32 v" memory(94) $end
$var wire 32 w" memory(95) $end
$var wire 32 x" memory(96) $end
$var wire 32 y" memory(97) $end
$var wire 32 z" memory(98) $end
$var wire 32 {" memory(99) $end
$upscope $end
$scope module wrport $end
$var wire 1 + clk $end
$var wire 1 , rst $end
$var wire 7 q! mem_w_addr $end
$var wire 32 r! mem_w_data $end
$var wire 1 t! mem_w_en $end
$var wire 32 v! memory(0) $end
$var wire 32 w! memory(1) $end
$var wire 32 x! memory(2) $end
$var wire 32 y! memory(3) $end
$var wire 32 z! memory(4) $end
$var wire 32 {! memory(5) $end
$var wire 32 |! memory(6) $end
$var wire 32 }! memory(7) $end
$var wire 32 ~! memory(8) $end
$var wire 32 !" memory(9) $end
$var wire 32 "" memory(10) $end
$var wire 32 #" memory(11) $end
$var wire 32 $" memory(12) $end
$var wire 32 %" memory(13) $end
$var wire 32 &" memory(14) $end
$var wire 32 '" memory(15) $end
$var wire 32 (" memory(16) $end
$var wire 32 )" memory(17) $end
$var wire 32 *" memory(18) $end
$var wire 32 +" memory(19) $end
$var wire 32 ," memory(20) $end
$var wire 32 -" memory(21) $end
$var wire 32 ." memory(22) $end
$var wire 32 /" memory(23) $end
$var wire 32 0" memory(24) $end
$var wire 32 1" memory(25) $end
$var wire 32 2" memory(26) $end
$var wire 32 3" memory(27) $end
$var wire 32 4" memory(28) $end
$var wire 32 5" memory(29) $end
$var wire 32 6" memory(30) $end
$var wire 32 7" memory(31) $end
$var wire 32 8" memory(32) $end
$var wire 32 9" memory(33) $end
$var wire 32 :" memory(34) $end
$var wire 32 ;" memory(35) $end
$var wire 32 <" memory(36) $end
$var wire 32 =" memory(37) $end
$var wire 32 >" memory(38) $end
$var wire 32 ?" memory(39) $end
$var wire 32 @" memory(40) $end
$var wire 32 A" memory(41) $end
$var wire 32 B" memory(42) $end
$var wire 32 C" memory(43) $end
$var wire 32 D" memory(44) $end
$var wire 32 E" memory(45) $end
$var wire 32 F" memory(46) $end
$var wire 32 G" memory(47) $end
$var wire 32 H" memory(48) $end
$var wire 32 I" memory(49) $end
$var wire 32 J" memory(50) $end
$var wire 32 K" memory(51) $end
$var wire 32 L" memory(52) $end
$var wire 32 M" memory(53) $end
$var wire 32 N" memory(54) $end
$var wire 32 O" memory(55) $end
$var wire 32 P" memory(56) $end
$var wire 32 Q" memory(57) $end
$var wire 32 R" memory(58) $end
$var wire 32 S" memory(59) $end
$var wire 32 T" memory(60) $end
$var wire 32 U" memory(61) $end
$var wire 32 V" memory(62) $end
$var wire 32 W" memory(63) $end
$var wire 32 X" memory(64) $end
$var wire 32 Y" memory(65) $end
$var wire 32 Z" memory(66) $end
$var wire 32 [" memory(67) $end
$var wire 32 \" memory(68) $end
$var wire 32 ]" memory(69) $end
$var wire 32 ^" memory(70) $end
$var wire 32 _" memory(71) $end
$var wire 32 `" memory(72) $end
$var wire 32 a" memory(73) $end
$var wire 32 b" memory(74) $end
$var wire 32 c" memory(75) $end
$var wire 32 d" memory(76) $end
$var wire 32 e" memory(77) $end
$var wire 32 f" memory(78) $end
$var wire 32 g" memory(79) $end
$var wire 32 h" memory(80) $end
$var wire 32 i" memory(81) $end
$var wire 32 j" memory(82) $end
$var wire 32 k" memory(83) $end
$var wire 32 l" memory(84) $end
$var wire 32 m" memory(85) $end
$var wire 32 n" memory(86) $end
$var wire 32 o" memory(87) $end
$var wire 32 p" memory(88) $end
$var wire 32 q" memory(89) $end
$var wire 32 r" memory(90) $end
$var wire 32 s" memory(91) $end
$var wire 32 t" memory(92) $end
$var wire 32 u" memory(93) $end
$var wire 32 v" memory(94) $end
$var wire 32 w" memory(95) $end
$var wire 32 x" memory(96) $end
$var wire 32 y" memory(97) $end
$var wire 32 z" memory(98) $end
$var wire 32 {" memory(99) $end
$upscope $end
$upscope $end
$upscope $end
$scope module fetch_weight $end
$var wire 1 + clk $end
$var wire 1 , rst $end
$var wire 8 1 length $end
$var wire 1 3 done $end
$var wire 1 5 ready $end
$var wire 36 8 data $end
$var wire 1 : valid $end
$var wire 8 V counter $end
$var wire 32 W current_addr $end
$var wire 32 X adr $end
$var wire 1 Y we $end
$var wire 8 Z offset $end
$var wire 32 [ dat_r $end
$scope module mem $end
$var wire 32 X adr $end
$var wire 1 Y we $end
$var wire 32 [ dat_r $end
$var wire 7 \ mem_r_addr $end
$var wire 32 ] mem_r_data $end
$var wire 7 ^ mem_w_addr $end
$var wire 32 _ mem_w_data $end
$var wire 32 ` dat_w $end
$var wire 1 a mem_w_en $end
$scope module rdport $end
$var wire 1 + clk $end
$var wire 1 , rst $end
$var wire 7 \ mem_r_addr $end
$var wire 32 ] mem_r_data $end
$var wire 7 b latch_addr $end
$var wire 32 c memory(0) $end
$var wire 32 d memory(1) $end
$var wire 32 e memory(2) $end
$var wire 32 f memory(3) $end
$var wire 32 g memory(4) $end
$var wire 32 h memory(5) $end
$var wire 32 i memory(6) $end
$var wire 32 j memory(7) $end
$var wire 32 k memory(8) $end
$var wire 32 l memory(9) $end
$var wire 32 m memory(10) $end
$var wire 32 n memory(11) $end
$var wire 32 o memory(12) $end
$var wire 32 p memory(13) $end
$var wire 32 q memory(14) $end
$var wire 32 r memory(15) $end
$var wire 32 s memory(16) $end
$var wire 32 t memory(17) $end
$var wire 32 u memory(18) $end
$var wire 32 v memory(19) $end
$var wire 32 w memory(20) $end
$var wire 32 x memory(21) $end
$var wire 32 y memory(22) $end
$var wire 32 z memory(23) $end
$var wire 32 { memory(24) $end
$var wire 32 | memory(25) $end
$var wire 32 } memory(26) $end
$var wire 32 ~ memory(27) $end
$var wire 32 !! memory(28) $end
$var wire 32 "! memory(29) $end
$var wire 32 #! memory(30) $end
$var wire 32 $! memory(31) $end
$var wire 32 %! memory(32) $end
$var wire 32 &! memory(33) $end
$var wire 32 '! memory(34) $end
$var wire 32 (! memory(35) $end
$var wire 32 )! memory(36) $end
$var wire 32 *! memory(37) $end
$var wire 32 +! memory(38) $end
$var wire 32 ,! memory(39) $end
$var wire 32 -! memory(40) $end
$var wire 32 .! memory(41) $end
$var wire 32 /! memory(42) $end
$var wire 32 0! memory(43) $end
$var wire 32 1! memory(44) $end
$var wire 32 2! memory(45) $end
$var wire 32 3! memory(46) $end
$var wire 32 4! memory(47) $end
$var wire 32 5! memory(48) $end
$var wire 32 6! memory(49) $end
$var wire 32 7! memory(50) $end
$var wire 32 8! memory(51) $end
$var wire 32 9! memory(52) $end
$var wire 32 :! memory(53) $end
$var wire 32 ;! memory(54) $end
$var wire 32 <! memory(55) $end
$var wire 32 =! memory(56) $end
$var wire 32 >! memory(57) $end
$var wire 32 ?! memory(58) $end
$var wire 32 @! memory(59) $end
$var wire 32 A! memory(60) $end
$var wire 32 B! memory(61) $end
$var wire 32 C! memory(62) $end
$var wire 32 D! memory(63) $end
$var wire 32 E! memory(64) $end
$var wire 32 F! memory(65) $end
$var wire 32 G! memory(66) $end
$var wire 32 H! memory(67) $end
$var wire 32 I! memory(68) $end
$var wire 32 J! memory(69) $end
$var wire 32 K! memory(70) $end
$var wire 32 L! memory(71) $end
$var wire 32 M! memory(72) $end
$var wire 32 N! memory(73) $end
$var wire 32 O! memory(74) $end
$var wire 32 P! memory(75) $end
$var wire 32 Q! memory(76) $end
$var wire 32 R! memory(77) $end
$var wire 32 S! memory(78) $end
$var wire 32 T! memory(79) $end
$var wire 32 U! memory(80) $end
$var wire 32 V! memory(81) $end
$var wire 32 W! memory(82) $end
$var wire 32 X! memory(83) $end
$var wire 32 Y! memory(84) $end
$var wire 32 Z! memory(85) $end
$var wire 32 [! memory(86) $end
$var wire 32 \! memory(87) $end
$var wire 32 ]! memory(88) $end
$var wire 32 ^! memory(89) $end
$var wire 32 _! memory(90) $end
$var wire 32 `! memory(91) $end
$var wire 32 a! memory(92) $end
$var wire 32 b! memory(93) $end
$var wire 32 c! memory(94) $end
$var wire 32 d! memory(95) $end
$var wire 32 e! memory(96) $end
$var wire 32 f! memory(97) $end
$var wire 32 g! memory(98) $end
$var wire 32 h! memory(99) $end
$upscope $end
$scope module wrport $end
$var wire 1 + clk $end
$var wire 1 , rst $end
$var wire 7 ^ mem_w_addr $end
$var wire 32 _ mem_w_data $end
$var wire 1 a mem_w_en $end
$var wire 32 c memory(0) $end
$var wire 32 d memory(1) $end
$var wire 32 e memory(2) $end
$var wire 32 f memory(3) $end
$var wire 32 g memory(4) $end
$var wire 32 h memory(5) $end
$var wire 32 i memory(6) $end
$var wire 32 j memory(7) $end
$var wire 32 k memory(8) $end
$var wire 32 l memory(9) $end
$var wire 32 m memory(10) $end
$var wire 32 n memory(11) $end
$var wire 32 o memory(12) $end
$var wire 32 p memory(13) $end
$var wire 32 q memory(14) $end
$var wire 32 r memory(15) $end
$var wire 32 s memory(16) $end
$var wire 32 t memory(17) $end
$var wire 32 u memory(18) $end
$var wire 32 v memory(19) $end
$var wire 32 w memory(20) $end
$var wire 32 x memory(21) $end
$var wire 32 y memory(22) $end
$var wire 32 z memory(23) $end
$var wire 32 { memory(24) $end
$var wire 32 | memory(25) $end
$var wire 32 } memory(26) $end
$var wire 32 ~ memory(27) $end
$var wire 32 !! memory(28) $end
$var wire 32 "! memory(29) $end
$var wire 32 #! memory(30) $end
$var wire 32 $! memory(31) $end
$var wire 32 %! memory(32) $end
$var wire 32 &! memory(33) $end
$var wire 32 '! memory(34) $end
$var wire 32 (! memory(35) $end
$var wire 32 )! memory(36) $end
$var wire 32 *! memory(37) $end
$var wire 32 +! memory(38) $end
$var wire 32 ,! memory(39) $end
$var wire 32 -! memory(40) $end
$var wire 32 .! memory(41) $end
$var wire 32 /! memory(42) $end
$var wire 32 0! memory(43) $end
$var wire 32 1! memory(44) $end
$var wire 32 2! memory(45) $end
$var wire 32 3! memory(46) $end
$var wire 32 4! memory(47) $end
$var wire 32 5! memory(48) $end
$var wire 32 6! memory(49) $end
$var wire 32 7! memory(50) $end
$var wire 32 8! memory(51) $end
$var wire 32 9! memory(52) $end
$var wire 32 :! memory(53) $end
$var wire 32 ;! memory(54) $end
$var wire 32 <! memory(55) $end
$var wire 32 =! memory(56) $end
$var wire 32 >! memory(57) $end
$var wire 32 ?! memory(58) $end
$var wire 32 @! memory(59) $end
$var wire 32 A! memory(60) $end
$var wire 32 B! memory(61) $end
$var wire 32 C! memory(62) $end
$var wire 32 D! memory(63) $end
$var wire 32 E! memory(64) $end
$var wire 32 F! memory(65) $end
$var wire 32 G! memory(66) $end
$var wire 32 H! memory(67) $end
$var wire 32 I! memory(68) $end
$var wire 32 J! memory(69) $end
$var wire 32 K! memory(70) $end
$var wire 32 L! memory(71) $end
$var wire 32 M! memory(72) $end
$var wire 32 N! memory(73) $end
$var wire 32 O! memory(74) $end
$var wire 32 P! memory(75) $end
$var wire 32 Q! memory(76) $end
$var wire 32 R! memory(77) $end
$var wire 32 S! memory(78) $end
$var wire 32 T! memory(79) $end
$var wire 32 U! memory(80) $end
$var wire 32 V! memory(81) $end
$var wire 32 W! memory(82) $end
$var wire 32 X! memory(83) $end
$var wire 32 Y! memory(84) $end
$var wire 32 Z! memory(85) $end
$var wire 32 [! memory(86) $end
$var wire 32 \! memory(87) $end
$var wire 32 ]! memory(88) $end
$var wire 32 ^! memory(89) $end
$var wire 32 _! memory(90) $end
$var wire 32 `! memory(91) $end
$var wire 32 a! memory(92) $end
$var wire 32 b! memory(93) $end
$var wire 32 c! memory(94) $end
$var wire 32 d! memory(95) $end
$var wire 32 e! memory(96) $end
$var wire 32 f! memory(97) $end
$var wire 32 g! memory(98) $end
$var wire 32 h! memory(99) $end
$upscope $end
$upscope $end
$upscope $end
$scope module mac $end
$var wire 1 + clk $end
$var wire 1 , rst $end
$var wire 1 / en $end
$var wire 36 F a $end
$var wire 1 H a_valid $end
$var wire 1 K a_ready $end
$var wire 36 L b $end
$var wire 1 N b_valid $end
$var wire 1 Q b_ready $end
$var wire 8 R acc_len $end
$var wire 32 T acc $end
$var wire 9 "# a_0 $end
$var wire 9 ## a_1 $end
$var wire 9 $# a_2 $end
$var wire 9 %# a_3 $end
$var wire 1 &# a_latched $end
$var wire 9 '# b_0 $end
$var wire 9 (# b_1 $end
$var wire 9 )# b_2 $end
$var wire 9 *# b_3 $end
$var wire 1 +# b_latched $end
$var wire 9 ,# c_0 $end
$var wire 9 -# c_1 $end
$var wire 9 .# c_2 $end
$var wire 9 /# c_3 $end
$var wire 32 0# dot_product $end
$var wire 8 1# acc_count $end
$var wire 1 2# done $end
$upscope $end
$scope module weight_sb $end
$var wire 1 + clk $end
$var wire 1 , rst $end
$var wire 1 6 o_ready $end
$var wire 32 7 i_data $end
$var wire 1 9 i_valid $end
$var wire 32 G o_data $end
$var wire 1 I o_valid $end
$var wire 1 J i_ready $end
$var wire 1 |" r_valid $end
$var wire 32 }" r_data $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 !
b0 "
b0 #
b0 $
b0 %
b0 &
b10 '
b10 (
b101 )
b101 *
0+
0,
1-
1.
1/
b0 0
b101 1
02
03
14
15
16
b0 7
b0 8
19
1:
b0 ;
b101 <
0=
0>
1?
1@
1A
b0 B
b0 C
1D
1E
b0 F
b0 G
1H
1I
1J
1K
b0 L
b0 M
1N
1O
1P
1Q
b101 R
b0 S
b0 T
0U
b0 V
b0 W
b0 X
0Y
b0 Z
b0 [
b0 \
b0 ]
b0 ^
b0 _
b0 `
0a
b0 b
b0 c
b1000000010000000100000001 d
b10000000100000001000000010 e
b11000000110000001100000011 f
b100000001000000010000000100 g
b101000001010000010100000101 h
b110000001100000011000000110 i
b111000001110000011100000111 j
b1000000010000000100000001000 k
b1001000010010000100100001001 l
b1010000010100000101000001010 m
b1011000010110000101100001011 n
b1100000011000000110000001100 o
b1101000011010000110100001101 p
b1110000011100000111000001110 q
b1111000011110000111100001111 r
b10000000100000001000000010000 s
b10001000100010001000100010001 t
b10010000100100001001000010010 u
b10011000100110001001100010011 v
b10100000101000001010000010100 w
b10101000101010001010100010101 x
b10110000101100001011000010110 y
b10111000101110001011100010111 z
b11000000110000001100000011000 {
b11001000110010001100100011001 |
b11010000110100001101000011010 }
b11011000110110001101100011011 ~
b11100000111000001110000011100 !!
b11101000111010001110100011101 "!
b11110000111100001111000011110 #!
b11111000111110001111100011111 $!
b100000001000000010000000100000 %!
b100001001000010010000100100001 &!
b100010001000100010001000100010 '!
b100011001000110010001100100011 (!
b100100001001000010010000100100 )!
b100101001001010010010100100101 *!
b100110001001100010011000100110 +!
b100111001001110010011100100111 ,!
b101000001010000010100000101000 -!
b101001001010010010100100101001 .!
b101010001010100010101000101010 /!
b101011001010110010101100101011 0!
b101100001011000010110000101100 1!
b101101001011010010110100101101 2!
b101110001011100010111000101110 3!
b101111001011110010111100101111 4!
b110000001100000011000000110000 5!
b110001001100010011000100110001 6!
b110010001100100011001000110010 7!
b110011001100110011001100110011 8!
b110100001101000011010000110100 9!
b110101001101010011010100110101 :!
b110110001101100011011000110110 ;!
b110111001101110011011100110111 <!
b111000001110000011100000111000 =!
b111001001110010011100100111001 >!
b111010001110100011101000111010 ?!
b111011001110110011101100111011 @!
b111100001111000011110000111100 A!
b111101001111010011110100111101 B!
b111110001111100011111000111110 C!
b111111001111110011111100111111 D!
b1000000010000000100000001000000 E!
b1000001010000010100000101000001 F!
b1000010010000100100001001000010 G!
b1000011010000110100001101000011 H!
b1000100010001000100010001000100 I!
b1000101010001010100010101000101 J!
b1000110010001100100011001000110 K!
b1000111010001110100011101000111 L!
b1001000010010000100100001001000 M!
b1001001010010010100100101001001 N!
b1001010010010100100101001001010 O!
b1001011010010110100101101001011 P!
b1001100010011000100110001001100 Q!
b1001101010011010100110101001101 R!
b1001110010011100100111001001110 S!
b1001111010011110100111101001111 T!
b1010000010100000101000001010000 U!
b1010001010100010101000101010001 V!
b1010010010100100101001001010010 W!
b1010011010100110101001101010011 X!
b1010100010101000101010001010100 Y!
b1010101010101010101010101010101 Z!
b1010110010101100101011001010110 [!
b1010111010101110101011101010111 \!
b1011000010110000101100001011000 ]!
b1011001010110010101100101011001 ^!
b1011010010110100101101001011010 _!
b1011011010110110101101101011011 `!
b1011100010111000101110001011100 a!
b1011101010111010101110101011101 b!
b1011110010111100101111001011110 c!
b1011111010111110101111101011111 d!
b1100000011000000110000001100000 e!
b1100001011000010110000101100001 f!
b1100010011000100110001001100010 g!
b1100011011000110110001101100011 h!
b0 i!
b0 j!
b0 k!
0l!
b0 m!
b0 n!
b0 o!
b0 p!
b0 q!
b0 r!
b0 s!
0t!
b0 u!
b0 v!
b1000000010000000100000001 w!
b10000000100000001000000010 x!
b11000000110000001100000011 y!
b100000001000000010000000100 z!
b101000001010000010100000101 {!
b110000001100000011000000110 |!
b111000001110000011100000111 }!
b1000000010000000100000001000 ~!
b1001000010010000100100001001 !"
b1010000010100000101000001010 ""
b1011000010110000101100001011 #"
b1100000011000000110000001100 $"
b1101000011010000110100001101 %"
b1110000011100000111000001110 &"
b1111000011110000111100001111 '"
b10000000100000001000000010000 ("
b10001000100010001000100010001 )"
b10010000100100001001000010010 *"
b10011000100110001001100010011 +"
b10100000101000001010000010100 ,"
b10101000101010001010100010101 -"
b10110000101100001011000010110 ."
b10111000101110001011100010111 /"
b11000000110000001100000011000 0"
b11001000110010001100100011001 1"
b11010000110100001101000011010 2"
b11011000110110001101100011011 3"
b11100000111000001110000011100 4"
b11101000111010001110100011101 5"
b11110000111100001111000011110 6"
b11111000111110001111100011111 7"
b100000001000000010000000100000 8"
b100001001000010010000100100001 9"
b100010001000100010001000100010 :"
b100011001000110010001100100011 ;"
b100100001001000010010000100100 <"
b100101001001010010010100100101 ="
b100110001001100010011000100110 >"
b100111001001110010011100100111 ?"
b101000001010000010100000101000 @"
b101001001010010010100100101001 A"
b101010001010100010101000101010 B"
b101011001010110010101100101011 C"
b101100001011000010110000101100 D"
b101101001011010010110100101101 E"
b101110001011100010111000101110 F"
b101111001011110010111100101111 G"
b110000001100000011000000110000 H"
b110001001100010011000100110001 I"
b110010001100100011001000110010 J"
b110011001100110011001100110011 K"
b110100001101000011010000110100 L"
b110101001101010011010100110101 M"
b110110001101100011011000110110 N"
b110111001101110011011100110111 O"
b111000001110000011100000111000 P"
b111001001110010011100100111001 Q"
b111010001110100011101000111010 R"
b111011001110110011101100111011 S"
b111100001111000011110000111100 T"
b111101001111010011110100111101 U"
b111110001111100011111000111110 V"
b111111001111110011111100111111 W"
b1000000010000000100000001000000 X"
b1000001010000010100000101000001 Y"
b1000010010000100100001001000010 Z"
b1000011010000110100001101000011 ["
b1000100010001000100010001000100 \"
b1000101010001010100010101000101 ]"
b1000110010001100100011001000110 ^"
b1000111010001110100011101000111 _"
b1001000010010000100100001001000 `"
b1001001010010010100100101001001 a"
b1001010010010100100101001001010 b"
b1001011010010110100101101001011 c"
b1001100010011000100110001001100 d"
b1001101010011010100110101001101 e"
b1001110010011100100111001001110 f"
b1001111010011110100111101001111 g"
b1010000010100000101000001010000 h"
b1010001010100010101000101010001 i"
b1010010010100100101001001010010 j"
b1010011010100110101001101010011 k"
b1010100010101000101010001010100 l"
b1010101010101010101010101010101 m"
b1010110010101100101011001010110 n"
b1010111010101110101011101010111 o"
b1011000010110000101100001011000 p"
b1011001010110010101100101011001 q"
b1011010010110100101101001011010 r"
b1011011010110110101101101011011 s"
b1011100010111000101110001011100 t"
b1011101010111010101110101011101 u"
b1011110010111100101111001011110 v"
b1011111010111110101111101011111 w"
b1100000011000000110000001100000 x"
b1100001011000010110000101100001 y"
b1100010011000100110001001100010 z"
b1100011011000110110001101100011 {"
0|"
b0 }"
0~"
b0 !#
b0 "#
b0 ##
b0 $#
b0 %#
1&#
b0 '#
b0 (#
b0 )#
b0 *#
1+#
b0 ,#
b0 -#
b0 .#
b0 /#
b0 0#
b0 1#
02#
$end
#500000
b1 k!
b1 o!
b1 W
b1 V
1U
b1 \
b1 1#
1+
b1 X
b1 q!
b1 ^
b1 i!
b1 j!
#1000000
0+
#1500000
b1000000001000000001000000001 G
b1 $#
b1000000010000000100000001 ]
b1 ,#
b1000000001000000001000000001 M
b1000000010000000100000001 p!
b1000000001000000001000000001 B
b1 -#
b10 k!
b1000000001000000001000000001 F
b1 .#
b10 V
b1 b
b10 1#
b1000000001000000001000000001 L
b10 i!
b1 /#
b10 j!
b100 0#
b1 u!
b1 %#
b1 "#
b10 W
b1000000010000000100000001 n!
0U
1+
b10 X
b1000000010000000100000001 [
b1 '#
b1 (#
b10 o!
b1000000001000000001000000001 8
b1 ##
b10 \
b1 )#
b10 q!
b10 ^
b1000000001000000001000000001 7
b1000000001000000001000000001 C
b1 *#
#2000000
0+
#2500000
b10000000010000000010000000010 G
b10 $#
b10000000100000001000000010 ]
b100 ,#
b10000000010000000010000000010 M
b10 *#
b10000000100000001000000010 p!
b10000000010000000010000000010 B
b100 -#
b11 k!
b10000000010000000010000000010 F
b100 T
b100 .#
b11 V
b10 b
b11 1#
b10000000010000000010000000010 L
b100 /#
b11 j!
b1000000001000000001000000001 !#
b10000 0#
b10 u!
b10 %#
b100 S
b10 "#
b11 W
b10000000100000001000000010 n!
1U
1+
b11 X
b10000000100000001000000010 [
b10 '#
b10 (#
b11 o!
b10000000010000000010000000010 8
b10 ##
b11 \
b1000000001000000001000000001 }"
b10 )#
b11 q!
b11 ^
b10000000010000000010000000010 7
b10000000010000000010000000010 C
b11 i!
#3000000
0+
#3500000
b11000000011000000011000000011 G
b11 $#
b11000000110000001100000011 ]
b1001 ,#
b11000000011000000011000000011 M
b11 *#
b11000000110000001100000011 p!
b11000000011000000011000000011 B
b1001 -#
b100 k!
b11000000011000000011000000011 F
b10100 T
b1001 .#
b100 V
b11 b
b100 1#
b11000000011000000011000000011 L
b1001 /#
b100 j!
b10000000010000000010000000010 !#
b100100 0#
b11 u!
b11 %#
b10100 S
b11 "#
b100 W
b11000000110000001100000011 n!
0U
1+
b100 X
b11000000110000001100000011 [
b11 '#
b11 (#
b100 o!
b11000000011000000011000000011 8
b11 ##
b100 \
b10000000010000000010000000010 }"
b11 )#
b100 q!
b100 ^
b11000000011000000011000000011 7
b11000000011000000011000000011 C
b100 i!
#4000000
0+
#4500000
b100000000100000000100000000100 G
b100 $#
b100000001000000010000000100 ]
b10000 ,#
b100000000100000000100000000100 M
b100 *#
b100000001000000010000000100 p!
b100000000100000000100000000100 B
b10000 -#
b101 k!
b100000000100000000100000000100 F
b111000 T
b10000 .#
b101 V
b100 b
b101 1#
b100000000100000000100000000100 L
b10000 /#
b101 j!
b11000000011000000011000000011 !#
b1000000 0#
b100 u!
b100 %#
b111000 S
b100 "#
b101 W
b100000001000000010000000100 n!
1U
1+
b101 X
b100000001000000010000000100 [
b100 '#
b100 (#
b101 o!
b100000000100000000100000000100 8
b100 ##
b101 \
b11000000011000000011000000011 }"
b100 )#
b101 q!
b101 ^
b100000000100000000100000000100 7
b100000000100000000100000000100 C
b101 i!
#5000000
0+
#5500000
b0 G
b0 $#
1=
b101000001010000010100000101 ]
b0 ,#
b0 M
b0 *#
b101000001010000010100000101 p!
b0 B
b0 -#
b0 k!
b0 F
b1111000 T
b0 .#
b110 V
b101 b
b110 1#
b0 L
b0 /#
b0 j!
b100000000100000000100000000100 !#
b0 0#
b101 u!
b0 %#
b1111000 S
b0 "#
b0 W
12#
0U
b101000001010000010100000101 n!
1+
b0 X
13
b101000001010000010100000101 [
b0 '#
b0 (#
b0 o!
b0 8
12
b0 ##
b0 \
b100000000100000000100000000100 }"
1>
b0 )#
b0 q!
b0 ^
b0 7
b0 C
b110 i!
#6000000
0+
#6500000
0=
b0 ]
b0 p!
b101 k!
b0 T
b101 m!
b0 V
b0 b
b0 1#
b101 j!
b0 !#
b0 u!
b0 S
b101 W
02#
1U
b0 n!
1+
b101 X
b101 Z
03
b0 [
b101 o!
02
b101 \
b0 }"
0>
b101 q!
b101 ^
b0 i!
#7000000
0+
#7500000
b101000000101000000101000000101 G
b101 $#
b101000001010000010100000101 ]
b11001 ,#
b101000000101000000101000000101 M
b101000001010000010100000101 p!
b101000000101000000101000000101 B
b11001 -#
b110 k!
b101000000101000000101000000101 F
b11001 .#
b1 V
b101 b
b1 1#
b101000000101000000101000000101 L
b1 i!
b11001 /#
b110 j!
b1100100 0#
b101 u!
b101 %#
b101 "#
b110 W
b101000001010000010100000101 n!
0U
1+
b110 X
b101000001010000010100000101 [
b101 '#
b101 (#
b110 o!
b101000000101000000101000000101 8
b101 ##
b110 \
b101 )#
b110 q!
b110 ^
b101000000101000000101000000101 7
b101000000101000000101000000101 C
b101 *#
#8000000
0+
#8500000
b110000000110000000110000000110 G
b110 $#
b110000001100000011000000110 ]
b100100 ,#
b110000000110000000110000000110 M
b110 *#
b110000001100000011000000110 p!
b110000000110000000110000000110 B
b100100 -#
b111 k!
b110000000110000000110000000110 F
b1100100 T
b100100 .#
b10 V
b110 b
b10 1#
b110000000110000000110000000110 L
b100100 /#
b111 j!
b101000000101000000101000000101 !#
b10010000 0#
b110 u!
b110 %#
b1100100 S
b110 "#
b111 W
b110000001100000011000000110 n!
1U
1+
b111 X
b110000001100000011000000110 [
b110 '#
b110 (#
b111 o!
b110000000110000000110000000110 8
b110 ##
b111 \
b101000000101000000101000000101 }"
b110 )#
b111 q!
b111 ^
b110000000110000000110000000110 7
b110000000110000000110000000110 C
b10 i!
#9000000
0+
#9500000
b111000000111000000111000000111 G
b111 $#
b111000001110000011100000111 ]
b110001 ,#
b111000000111000000111000000111 M
b111 *#
b111000001110000011100000111 p!
b111000000111000000111000000111 B
b110001 -#
b1000 k!
b111000000111000000111000000111 F
b11110100 T
b110001 .#
b11 V
b111 b
b11 1#
b111000000111000000111000000111 L
b110001 /#
b1000 j!
b110000000110000000110000000110 !#
b11000100 0#
b111 u!
b111 %#
b11110100 S
b111 "#
b1000 W
b111000001110000011100000111 n!
0U
1+
b1000 X
b111000001110000011100000111 [
b111 '#
b111 (#
b1000 o!
b111000000111000000111000000111 8
b111 ##
b1000 \
b110000000110000000110000000110 }"
b111 )#
b1000 q!
b1000 ^
b111000000111000000111000000111 7
b111000000111000000111000000111 C
b11 i!
#10000000
0+
#10500000
b1000000001000000001000000001000 G
b1000 $#
b1000000010000000100000001000 ]
b1000000 ,#
b1000000001000000001000000001000 M
b1000 *#
b1000000010000000100000001000 p!
b1000000001000000001000000001000 B
b1000000 -#
b1001 k!
b1000000001000000001000000001000 F
b110111000 T
b1000000 .#
b100 V
b1000 b
b100 1#
b1000000001000000001000000001000 L
b1000000 /#
b1001 j!
b111000000111000000111000000111 !#
b100000000 0#
b1000 u!
b1000 %#
b110111000 S
b1000 "#
b1001 W
b1000000010000000100000001000 n!
1U
1+
b1001 X
b1000000010000000100000001000 [
b1000 '#
b1000 (#
b1001 o!
b1000000001000000001000000001000 8
b1000 ##
b1001 \
b111000000111000000111000000111 }"
b1000 )#
b1001 q!
b1001 ^
b1000000001000000001000000001000 7
b1000000001000000001000000001000 C
b100 i!
#11000000
0+
#11500000
b1001000001001000001001000001001 G
b1001 $#
b1001000010010000100100001001 ]
b1010001 ,#
b1001000001001000001001000001001 M
b1001 *#
b1001000010010000100100001001 p!
b1001000001001000001001000001001 B
b1010001 -#
b1010 k!
b1001000001001000001001000001001 F
b1010111000 T
b1010001 .#
b101 V
b1001 b
b101 1#
b1001000001001000001001000001001 L
b1010001 /#
b1010 j!
b1000000001000000001000000001000 !#
b101000100 0#
b1001 u!
b1001 %#
b1010111000 S
b1001 "#
b1010 W
b1001000010010000100100001001 n!
0U
1+
b1010 X
b1001000010010000100100001001 [
b1001 '#
b1001 (#
b1010 o!
b1001000001001000001001000001001 8
b1001 ##
b1010 \
b1000000001000000001000000001000 }"
b1001 )#
b1010 q!
b1010 ^
b1001000001001000001001000001001 7
b1001000001001000001001000001001 C
b101 i!
#12000000
0+
#12500000
b0 G
b0 $#
1=
b1010000010100000101000001010 ]
b0 ,#
b0 M
b0 *#
b1010000010100000101000001010 p!
b0 B
b0 -#
b0 k!
b0 F
b1111111100 T
b0 .#
b110 V
b1010 b
b110 1#
b0 L
b0 /#
b0 j!
b1001000001001000001001000001001 !#
b0 0#
b1010 u!
b0 %#
b1111111100 S
b0 "#
b0 W
12#
1U
b1010000010100000101000001010 n!
1+
b0 X
13
b1010000010100000101000001010 [
b0 '#
b0 (#
b0 o!
b0 8
12
b0 ##
b0 \
b1001000001001000001001000001001 }"
1>
b0 )#
b0 q!
b0 ^
b0 7
b0 C
b110 i!
#13000000
0+
#13500000
0=
b0 ]
b0 p!
b1010 k!
b0 T
b1010 m!
b0 V
b0 b
b0 1#
b1010 j!
b0 !#
b0 u!
b0 S
b1010 W
02#
0U
b0 n!
1+
b1010 X
b1010 Z
03
b0 [
b1010 o!
02
b1010 \
b0 }"
0>
b1010 q!
b1010 ^
b0 i!
#14000000
0+
#14500000
b1010000001010000001010000001010 G
b1010 $#
b1010000010100000101000001010 ]
b1100100 ,#
b1010000001010000001010000001010 M
b1010000010100000101000001010 p!
b1010000001010000001010000001010 B
b1100100 -#
b1011 k!
b1010000001010000001010000001010 F
b1100100 .#
b1 V
b1010 b
b1 1#
b1010000001010000001010000001010 L
b1 i!
b1100100 /#
b1011 j!
b110010000 0#
b1010 u!
b1010 %#
b1010 "#
b1011 W
b1010000010100000101000001010 n!
1U
1+
b1011 X
b1010000010100000101000001010 [
b1010 '#
b1010 (#
b1011 o!
b1010000001010000001010000001010 8
b1010 ##
b1011 \
b1010 )#
b1011 q!
b1011 ^
b1010000001010000001010000001010 7
b1010000001010000001010000001010 C
b1010 *#
#15000000
